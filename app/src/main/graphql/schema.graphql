# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

directive @cacheControl(maxAge: Int, scope: CacheControlScope) on OBJECT | FIELD_DEFINITION | INTERFACE

type Mutation {
    """

    Creates a new task. Returns newly created task.
    Default value for parameter "isDone" is false. Default value for "note" is null.
    """
    createTask(isDone: Boolean, name: String!, note: String): Task
    """

    Deletes task identified by "id".
    Returns true if the task was deleted. Returns false if there was no task for a given id.
    """
    deleteTask(id: String!): Boolean
    """

    For a given apiKey and a username, generates accessToken.
    All queries and mutations except generateAccessToken require HTTP header Authorization with accessToken as the value.
    """
    generateAccessToken(apiKey: String!, userName: String!): String
    """

    Updates value of the flag "isDone" for task identified by "id".
    Returns Task after update.
    """
    updateTaskStatus(id: String!, isDone: Boolean!): Task
}

type Query {
    "Returns all tasks for a user identified by accessKey. Tasks are sorted by a creation timestamp."
    allTasks: [Task]
}

"A structure of a single task."
type Task {
    id: String!
    isDone: Boolean!
    name: String!
    note: String
}

enum CacheControlScope {
    PRIVATE
    PUBLIC
}
